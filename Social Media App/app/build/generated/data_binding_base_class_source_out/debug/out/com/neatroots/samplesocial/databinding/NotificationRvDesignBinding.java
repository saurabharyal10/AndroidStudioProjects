// Generated by view binder compiler. Do not edit!
package com.neatroots.samplesocial.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.neatroots.samplesocial.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class NotificationRvDesignBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView notification;

  @NonNull
  public final CircleImageView notificationProfile;

  @NonNull
  public final TextView time;

  @NonNull
  public final View view9;

  private NotificationRvDesignBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView notification, @NonNull CircleImageView notificationProfile,
      @NonNull TextView time, @NonNull View view9) {
    this.rootView = rootView;
    this.notification = notification;
    this.notificationProfile = notificationProfile;
    this.time = time;
    this.view9 = view9;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static NotificationRvDesignBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static NotificationRvDesignBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.notification_rv_design, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static NotificationRvDesignBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.notification;
      TextView notification = rootView.findViewById(id);
      if (notification == null) {
        break missingId;
      }

      id = R.id.notificationProfile;
      CircleImageView notificationProfile = rootView.findViewById(id);
      if (notificationProfile == null) {
        break missingId;
      }

      id = R.id.time;
      TextView time = rootView.findViewById(id);
      if (time == null) {
        break missingId;
      }

      id = R.id.view9;
      View view9 = rootView.findViewById(id);
      if (view9 == null) {
        break missingId;
      }

      return new NotificationRvDesignBinding((ConstraintLayout) rootView, notification,
          notificationProfile, time, view9);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
