// Generated by view binder compiler. Do not edit!
package com.neatroots.samplesocial.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.neatroots.samplesocial.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SampleBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView textView16;

  @NonNull
  public final TextView textView17;

  @NonNull
  public final TextView textView18;

  @NonNull
  public final TextView textView19;

  @NonNull
  public final View view11;

  @NonNull
  public final View view12;

  @NonNull
  public final View view13;

  @NonNull
  public final View view16;

  @NonNull
  public final View view17;

  private SampleBinding(@NonNull ConstraintLayout rootView, @NonNull TextView textView16,
      @NonNull TextView textView17, @NonNull TextView textView18, @NonNull TextView textView19,
      @NonNull View view11, @NonNull View view12, @NonNull View view13, @NonNull View view16,
      @NonNull View view17) {
    this.rootView = rootView;
    this.textView16 = textView16;
    this.textView17 = textView17;
    this.textView18 = textView18;
    this.textView19 = textView19;
    this.view11 = view11;
    this.view12 = view12;
    this.view13 = view13;
    this.view16 = view16;
    this.view17 = view17;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SampleBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SampleBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.sample, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SampleBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.textView16;
      TextView textView16 = rootView.findViewById(id);
      if (textView16 == null) {
        break missingId;
      }

      id = R.id.textView17;
      TextView textView17 = rootView.findViewById(id);
      if (textView17 == null) {
        break missingId;
      }

      id = R.id.textView18;
      TextView textView18 = rootView.findViewById(id);
      if (textView18 == null) {
        break missingId;
      }

      id = R.id.textView19;
      TextView textView19 = rootView.findViewById(id);
      if (textView19 == null) {
        break missingId;
      }

      id = R.id.view11;
      View view11 = rootView.findViewById(id);
      if (view11 == null) {
        break missingId;
      }

      id = R.id.view12;
      View view12 = rootView.findViewById(id);
      if (view12 == null) {
        break missingId;
      }

      id = R.id.view13;
      View view13 = rootView.findViewById(id);
      if (view13 == null) {
        break missingId;
      }

      id = R.id.view16;
      View view16 = rootView.findViewById(id);
      if (view16 == null) {
        break missingId;
      }

      id = R.id.view17;
      View view17 = rootView.findViewById(id);
      if (view17 == null) {
        break missingId;
      }

      return new SampleBinding((ConstraintLayout) rootView, textView16, textView17, textView18,
          textView19, view11, view12, view13, view16, view17);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
